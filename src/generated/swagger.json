{
    "openapi": "3.0.0",
    "info": {
        "title": "Demonstride",
        "version": "4.3.0",
        "description": "Restful API for the CordX Services"
    },
    "host": "0.0.0.0:4995",
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication API"
        },
        {
            "name": "Bucket",
            "description": "Bucket API"
        },
        {
            "name": "Entities",
            "description": "Entities API"
        },
        {
            "name": "Users",
            "description": "Users API"
        }
    ],
    "paths": {
        "/bucket": {
            "get": {
                "tags": ["Bucket"],
                "description": "Get our bucket server statistics.",
                "responses": {
                    "200": {
                        "description": "Server statistics.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BucketStats"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch bucket stats."
                    }
                }
            }
        },
        "/entities": {
            "get": {
                "tags": ["Entities"],
                "description": "List all of our available entities",
                "responses": {
                    "200": {
                        "description": "Returns a list of all entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Entity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/entities/user/{id}": {
            "get": {
                "tags": ["Entities", "Users"],
                "description": "Fetch a user by either their Discord ID or CordX Cornflake ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "The user's ID, can either be a Discord ID or a CordX Cornflake ID.",
                        "schema": {
                            "type": "string",
                            "description": "The user's ID, can either be a Discord ID or a CordX Cornflake ID."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check the health of the API.",
                "responses": {
                    "200": {
                        "description": "The API is healthy and running."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BucketStats": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Status message."
                    },
                    "uptime": {
                        "type": "string",
                        "description": "Uptime of the bucket server."
                    },
                    "nodes": {
                        "type": "string",
                        "description": "Number of nodes online."
                    },
                    "buckets": {
                        "type": "string",
                        "description": "Total number of buckets."
                    },
                    "objects": {
                        "type": "string",
                        "description": "Total number of objects stored."
                    },
                    "totalStorageUsed": {
                        "type": "string",
                        "description": "Total storage used."
                    },
                    "freeStorageSpace": {
                        "type": "string",
                        "description": "Free storage space available."
                    },
                    "totalRequests": {
                        "type": "string",
                        "description": "Total number of requests."
                    },
                    "totalErrors": {
                        "type": "string",
                        "description": "Total number of errors."
                    },
                    "networkReceived": {
                        "type": "string",
                        "description": "Total network traffic received."
                    },
                    "networkSent": {
                        "type": "string",
                        "description": "Total network traffic sent."
                    },
                    "code": {
                        "type": "integer",
                        "description": "HTTP status code."
                    }
                }
            },
            "Entity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Entity's CordX Cornflake ID"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of entity (User, Organization)"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The domain of the entity"
                    },
                    "_count": {
                        "type": "object",
                        "properties": {
                            "domains": {
                                "type": "number",
                                "description": "The number of domains associated with the entity"
                            },
                            "uploads": {
                                "type": "number",
                                "description": "The number of uploads created by the entity"
                            },
                            "webhooks": {
                                "type": "number",
                                "description": "The number of webhooks associated with the entity"
                            }
                        }
                    }
                }
            },
            "UserEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The user's Cornflake ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "The user's name"
                    },
                    "handle": {
                        "type": "string",
                        "description": "The user's handle"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of entity"
                    },
                    "biography": {
                        "type": "string",
                        "description": "The user's biography"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "The user's Discord Avatar URL"
                    },
                    "banner": {
                        "type": "string",
                        "description": "The user's Discord Banner URL"
                    },
                    "userid": {
                        "type": "string",
                        "description": "The user's Discord ID"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date the entity was created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date the entity was last updated"
                    },
                    "_count": {
                        "type": "object",
                        "properties": {
                            "domains": {
                                "type": "number",
                                "description": "The number of domains the user owns"
                            },
                            "uploads": {
                                "type": "number",
                                "description": "The number of uploads by the user"
                            },
                            "perms": {
                                "type": "number",
                                "description": "The number of permissions the user has"
                            }
                        }
                    }
                }
            },
            "Error": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status code of the error"
                    },
                    "message": {
                        "type": "string",
                        "description": "The error message"
                    },
                    "code": {
                        "type": "number",
                        "description": "The HTTP status code"
                    }
                }
            }
        }
    }
}
